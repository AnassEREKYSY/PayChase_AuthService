name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_AUTH: paychase-auth

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore ./API/API.csproj

      - name: Build
        run: dotnet build ./API/API.csproj --configuration Release --no-restore

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Artillery
        working-directory: load
        run: npm install -g artillery

      - name: Run Artillery
        working-directory: load
        run: |
          if [ -f "artillery.yml" ]; then
            artillery run artillery.yml -o report.json
            artillery report report.json -o report.html
          fi

      - name: Upload load test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: load-test-report
          path: load/report.html

  docker_build_push:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v3

      - name: Set image sha
        id: meta
        run: echo "sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.IMAGE_AUTH }}:latest
            ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.IMAGE_AUTH }}:${{ steps.meta.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_ovh:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: docker_build_push
    steps:
      - name: Lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Deploy to OVH
        uses: appleboy/ssh-action@v1.0.0
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          host: ${{ secrets.OVH_HOST }}
          username: ${{ secrets.OVH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: REGISTRY,OWNER_LC,GHCR_TOKEN
          script: |
            set -euo pipefail

            APP_DIR="$HOME/paychase-auth"
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            echo "$GHCR_TOKEN" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            cat > docker-compose.yml <<'YML'
            version: "3.9"
            services:
              auth-service:
                image: ghcr.io/${OWNER_LC}/paychase-auth:latest
                container_name: paychase-auth
                restart: unless-stopped
                env_file: .env
                ports:
                  - "5261:5261"
                networks:
                  - paychase_net
            networks:
              paychase_net:
                external: true
            YML

            cat > .env <<'EOF'
            MONGO_CONN=${{ secrets.MONGO_CONN }}
            MONGO_DB=paychase
            REDIS_CONN=${{ secrets.REDIS_CONN }}
            JWT_ISSUER=paychase.auth
            JWT_AUDIENCE=paychase.clients
            JWT_KEY=${{ secrets.JWT_KEY }}
            JWT_EXPIRES_MIN=60
            REFRESH_EXPIRES_DAYS=7
            ASPNETCORE_URLS=http://+:5261
            ASPNETCORE_ENVIRONMENT=Production
            EOF

            docker compose down --remove-orphans || true
            docker compose pull
            docker compose up -d
